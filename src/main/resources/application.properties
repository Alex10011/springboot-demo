################base################
spring.application.name=grimm-provider
server.port=8000
info.app.name=${spring.application.name}-${server.port}
info.app.java.target=@java.version@
info.app.version=1.0
#发布目录
server.context-path=

logging.config=classpath:logback-spring.xml

################多环境配置################
####启动命令 java -jar xxx.jar --spring.profiles.active=dev ###
spring.profiles.active=dev

################Druid################
#访问 http://127.0.0.1:8000/security_druid/index.html 即可监控
#druid WebStatFilter监控配置  
spring.datasource.druid.web-stat-filter.profile-enable=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/security_druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable=true  
spring.datasource.druid.web-stat-filter.session-stat-max-count=10  
#druid StatViewServlet监控配置
spring.datasource.druid.stat-view-servlet.url-pattern=/security_druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.allow=192.168.1.110,127.0.0.1
spring.datasource.druid.stat-view-servlet.deny=192.168.16.111
# 配置StatFilter
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000
# 配置WallFilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.alter-table-allow=false
spring.datasource.druid.filter.wall.config.truncate-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false
#是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL。
spring.datasource.druid.filter.wall.config.none-base-statement-allow=false
#检查UPDATE语句是否无where条件，这是有风险的，但不是SQL注入类型的风险
spring.datasource.druid.filter.wall.config.update-where-none-check=true
#SELECT ... INTO OUTFILE 是否允许，这个是mysql注入攻击的常见手段，缺省是禁止的
spring.datasource.druid.filter.wall.config.select-into-outfile-allow=false
#是否允许调用Connection.getMetadata方法，这个方法调用会暴露数据库的表信息
spring.datasource.druid.filter.wall.config.metadata-allow=true
#对被认为是攻击的SQL进行LOG.error输出
spring.datasource.druid.filter.wall.log-violation=true
#对被认为是攻击的SQL抛出SQLExcepton
spring.datasource.druid.filter.wall.throw-exception=true

################mybatis################
mybatis.typeAliasesPackage=com.alex10011.example.domain
mybatis.mapperLocations=classpath:mapper/*.xml


################mail################
spring.mail.host=test
spring.mail.username=test1
spring.mail.password=test
spring.mail.port=
spring.mail.protocol=smtp

################监控点################
#常用观测点 /mappings ，/logfile ，/loggers ,/diskspace
endpoints.logfile.enabled=true
endpoints.loggers.enabled=true
endpoints.loggers.sensitive=false
endpoints.health.enabled=true
endpoints.health.sensitive=true
#服务路径
management.context-path=/manage
#服务端口
management.port=9000
management.security.enabled=true

management.health.defaults.enabled=true
management.health.diskspace.enabled=true
management.health.db.enabled=true
management.health.rabbit.enabled=true
management.health.redis.enabled=true
management.health.mongo.enabled=false
management.health.solr.enabled=false
management.health.jms.enabled=false
management.health.cassandra.enabled=false
management.health.couchbase.enabled=false
management.health.mail.enabled=false

################hystrix################
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000

################权限保护################
security.basic.enabled=true
security.basic.path=/security_*,/security_*/*
security.user.name=user
security.user.password=user

